// setup global styles
form.semanticForms {
  --formBackgroundColor: #fff;
  --formSubBackgroundColor: #f5f5f5;
  --formTextColor: #000;
  --buttonBackgroundColor: #f5f5f5;
  --borderColor: #c0c0c0;
  --subBorderColor: #c0c0c0;
  --placeholderColor: #aaa;
  --scrollbarColor: #c0c0c0;
  --clearButtonColor: #000;
  --buttonGradientLight: #fff;
  --buttonGradientDark: #c0c0c0;
  --selectIcon: url("data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23000'%3E%3Cpolygon points='0,0 100,0 50,50'/%3E%3C/svg%3E");
  --inputHeight: 38px;
  --borderRadius: 10px;
  --border: 1px var(--borderColor) solid;
}

form.semanticForms.dark {
  --formBackgroundColor: #555;
  --formSubBackgroundColor: #2f2f2f;
  --formTextColor: #fff;
  --buttonBackgroundColor: #454545;
  --borderColor: #656565;
  --subBorderColor: #3f3f3f;
  --placeholderColor: #C9C9C9;
  --scrollbarColor: #373737;
  --clearButtonColor: #fff;
  --buttonGradientLight: #6f6f6f;
  --buttonGradientDark: #373737;
  --selectIcon: url("data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23fff'%3E%3Cpolygon stroke='%23fff' points='0,0 100,0 50,50'/%3E%3C/svg%3E");
  --border: none;
}

// global override
form.semanticForms * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

form.semanticForms {
  color: var(--formTextColor);
  width: 100%;

  fieldset {
    display: flex;
    flex-direction: column;
    gap: 10px;
    border-radius: var(--borderRadius);
    padding: 20px 10px;
    margin-bottom: 15px;
    background: var(--formSubBackgroundColor);
    border: 1px var(--subBorderColor) solid;

    dl {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); // allows grid items to automatically resize
      gap: 10px;
      margin-bottom: 10px;

      dd:not(.checkboxes):not(.radios) {
        display: flex;
        gap: 10px;
        max-width: 500px; // prevents inputs from spanning entire width

        &:not(.singleCheckbox) {
          flex-direction: column;
        }

        label {
          cursor: pointer;
        }
      }
    }
  }

  menu, ul {
    display: flex;
    justify-content: space-between;
    padding: 5px;
    list-style-type: none;
  }

  // adjust checkbox and radios labels
  dt {
    position: relative;

    label[data-for="checkboxes"],
    label[data-for="radios"] {
      position: absolute;
      transform: translateY(-100%) scale(0.8);
      top: 10px;
    }
  }

  .checkboxes ul,
  .radios ul {
    padding-left: 10px;
    margin-top: 5px;
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  dd {
    position: relative;
  }

  label {
    user-select: none;
    color: var(--placeholderColor);
    touch-action: manipulation;
  }

  // style all input types
  input:not([type='submit']):not([type='reset']):not([type='image']):not([type=checkbox]):not([type=radio]),
  select,
  textarea {
    background: var(--formBackgroundColor);
    border: var(--border);
    color: var(--formTextColor);
    width: 100%;
    border-radius: var(--borderRadius);
    font-size: 16px;
    touch-action: manipulation;

    &:not([type="range"]) {
      padding: 6px;
      padding-right: 30px;
    }

    &[disabled] {
      cursor: not-allowed;
      opacity: 0.5;

      + label {
        filter: brightness(50%);
      }
    }

    &:focus + label,
    &:not(:placeholder-shown)+label {
      transform: translateY(-150%) scale(0.75);
    }
  }

  input:not([type='submit']):not([type='reset']):not([type='image']):not([type=checkbox]):not([type=radio]),
  select {
    height: var(--inputHeight);
  }

  // specific styling for color input
  input[type=color] {
    padding: 4px !important;
    padding-right: 30px !important;
    height: var(--inputHeight);
  }

  input[type=checkbox],
  input[type=radio] {
    // 30# times larger based on font size
    width: 1.3em;
    height: 1.3em;
  }

  // custom dropdown graphic on select element
  select {
    cursor: pointer;
    background-image: var(--selectIcon);
    background-size: 14px;
    background-position: calc(100% - 8px) 16px;
    background-repeat: no-repeat;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }

  textarea {
    resize: vertical;
    width: 100%;
    min-height: 38px;
    height: 100px;
  }

  // update for scrollbars
  @supports (scrollbar-color: auto) {
    textarea {
      scrollbar-color: var(--scrollbarColor) var(--formBackgroundColor);
    }
  }

  // "x" button that appears when a value is entered
  button.clear {
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    position: absolute;
    top: 10px; // account for margin above each input
    bottom: 0;
    right: 0;
    margin: auto 6px;
    padding: 5px;
    background: none;
    border: none;
    color: var(--clearButtonColor);
    display: flex;
    align-items: center;
    justify-content: center;

    &:hover,
    &:focus {
      filter: brightness(0.8);
    }
  }

  // custom styling of clear button on textarea
  textarea + label + .clear {
    margin: 6px;
    bottom: auto;
  }

  // hide clear button while placeholder text is visible
  input:placeholder-shown + label + .clear,
  textarea:placeholder-shown + label + .clear,
  input[type=file] + label + .clear {
    display: none;
  }

  // button styling
  input[type='submit'],
  input[type='reset'],
  input[type='image'],
  button:not(.clear) {
    max-width: max-content;
    cursor: pointer;
    background-image: linear-gradient(to bottom, var(--buttonGradientLight) 0%, var(--buttonGradientDark) 100%);
    color: var(--formTextColor);
    border: 2px var(--buttonGradientDark) solid;
    border-radius: 20px;
    padding: 5px 25px;
    margin: 25px 10px;
    font-size: 100%;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    transition: filter 0.1s;

    &:hover {
      filter: brightness(1.2);
    }

    &:active,
    &:focus {
      background-image: linear-gradient(to bottom, var(--buttonGradientDark) 0%, var(--buttonGradientLight) 100%);
    }
  }

  // style placeholders
  input,
  textarea {
    &::placeholder {
      color: var(--placeholderColor);
      opacity: 1;
    }
  }

  input:not(:placeholder-shown) + label,
  input:focus + label,
  textarea:not(:placeholder-shown) + label,
  textarea:focus + label,
  select + label.floatLabelFormAnimatedLabel,
  .checkboxes label.floatLabelFormAnimatedLabel,
  .radios label.floatLabelFormAnimatedLabel,
  dt > label {
    color: var(--formTextColor);
  }

  // animated labels
  .floatLabelForm {
    div {
      position: relative;

      dd:not(.singleCheckbox):not(.checkboxes):not(.radios) {
        label {
          position: absolute;
          transform-origin: left center;
          pointer-events: none;
          top: 20px;
          left: 8px;
          transition: transform 250ms;
          cursor: text;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        input,
        textarea,
        select {
          margin-top: 10px;
        }

        input,
        textarea {
          // hide placeholder content until input is focused
          &::placeholder {
            opacity: 0;
            transition: inherit;
          }

          &::-moz-placeholder {
            opacity: 0;
            transition: inherit;
          }

          &::-webkit-input-placeholder {
            opacity: 0;
            transition: inherit;
          }

          &:-ms-input-placeholder {
            opacity: 0;
            transition: inherit;
          }

          // show placeholder content when focused
          &:focus {
            &::placeholder {
              opacity: 1;
            }

            &::-moz-placeholder {
              opacity: 1;
            }

            &::-webkit-input-placeholder {
              opacity: 1;
            }

            &:-ms-input-placeholder {
              opacity: 1;
            }
          }
        }
      }
    }

    // disable autofill yellow
    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active,
    textarea:-webkit-autofill,
    textarea:-webkit-autofill:hover,
    textarea:-webkit-autofill:focus,
    textarea:-webkit-autofill:active,
    select:-webkit-autofill,
    select:-webkit-autofill:hover,
    select:-webkit-autofill:focus,
    select:-webkit-autofill:active {
      -webkit-box-shadow: 0 0 0 1000px var(--formBackgroundColor) inset;
      transition: background-color 5000s ease-in-out 0s, color 5000s ease-in-out 0s;
      transition-delay: 5000s;
      transition-property: background-color, color;
    }
  }

  // low flow specific styling
  &.lowFlow {
    fieldset {
      dl {
        display: flex;
        flex-direction: column;
        gap: 5px;
      }

      dd {
        flex-direction: row !important;
        margin-bottom: 10px;
      }
    }
  }
}