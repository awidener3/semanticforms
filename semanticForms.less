// setup global colors
form.semanticForms {
  --inputHeight: 38px;
}

form.semanticForms.light {
  --formBackgroundColor: #fff;
  --formSubBackgroundColor: #f5f5f5;
  --formTextColor: #000;
  --buttonBackgroundColor: #f5f5f5;
  --borderColor: #c0c0c0;
  --subBorderColor: #c0c0c0;
  --placeholderColor: #aaa;
  --scrollbarColor: #c0c0c0;
}

form.semanticForms.dark {
  --formBackgroundColor: #555;
  --formSubBackgroundColor: #2f2f2f;
  --formTextColor: #fff;
  --buttonBackgroundColor: #373737;
  --borderColor: #555;
  --subBorderColor: #3f3f3f;
  --placeholderColor: #C9C9C9;
  --scrollbarColor: #373737;
}

// global override
form.semanticForms * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  list-style-type: none;
  font-family: sans-serif;
}

form.semanticForms {
  color: var(--formTextColor);
  width: 100%;

  fieldset {
    border-radius: 10px;
    padding: 20px 10px;
    margin-bottom: 25px;
    background: var(--formSubBackgroundColor);
    border: 1px var(--subBorderColor) solid;

    dl {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      gap: 25px;

      @media screen and (max-width: 768px) {
        grid-template-columns: 1fr 1fr;
      }

      @media screen and (max-width: 528px) {
        grid-template-columns: 1fr;
      }

      dd:not(.checkboxes):not(.radios).singleCheckbox {
        label {
          margin-top: 10px;
        }
      }
    }
  }

  // low flow specific styling
  &.lowFlow {
    fieldset {
      dl {
        display: flex;
        flex-direction: column;
        gap: 5px;
      }
    }
  }

  menu {
    display: flex;
    justify-content: space-between;
    padding: 5px;
  }

  // adjust checkbox and radios labels
  dt {
    position: relative;

    label[data-for="checkboxes"],
    label[data-for="radios"] {
      position: absolute;
      transform: translateY(-100%) scale(0.8);
    }
  }

  .checkboxes ul,
  .radios ul {
    padding-left: 10px;
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  input[type=checkbox],
  input[type=radio] {
    margin-right: 10px;
    padding: 8px;
    transform: scale(1.5);
  }

  dd {
    position: relative;
  }

  // style all input types
  input:not([type='submit']):not([type='reset']):not([type='image']):not([type=checkbox]):not([type=radio]),
  select,
  textarea {
    background: var(--formBackgroundColor);
    border: 1px var(--borderColor) solid;
    color: var(--formTextColor);
    width: 100%;
    border-radius: 5px;
    font-size: 16px;
    padding: 6px;
    padding-right: 30px;
    touch-action: manipulation;

    &[disabled] {
      cursor: not-allowed;
      opacity: 0.5;

      + label {
        filter: brightness(50%);
      }
    }

    &:focus + label,
    &:not(:placeholder-shown)+label {
      transform: translateY(-150%) scale(0.75);
    }
  }

  input:not([type='submit']):not([type='reset']):not([type='image']):not([type=checkbox]):not([type=radio]),
  select {
    height: var(--inputHeight);
  }

  label {
    color: var(--placeholderColor);
    touch-action: manipulation;
  }

  textarea {
    min-width: 100%;
    width: 100%;
    min-height: 38px;
    height: 100px;
  }

  // update for scrollbars
  @supports (scrollbar-color: auto) {
    textarea {
      scrollbar-color: var(--scrollbarColor) var(--formBackgroundColor);
    }
  }

  @supports selector(::-webkit-scrollbar) {
    textarea::-webkit-scrollbar {
      background-color: transparent;
      width: 10px;
      padding: 4px;
    }

    textarea::-webkit-scrollbar-thumb {
      cursor: pointer;
      background: var(--scrollbarColor);
      border-radius: 8px;
    }
  }

  // specific styling for color input
  input[type=color] {
    padding: 4px !important;
    padding-right: 30px !important;
    height: var(--inputHeight);
  }

  // custom dropdown graphic on select element
  select {
    cursor: pointer;
    background-image: url("data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23fff'%3E%3Cpolygon stroke='%23fff' points='0,0 100,0 50,50'/%3E%3C/svg%3E");
    background-size: 14px;
    background-position: calc(100% - 8px) 16px;
    background-repeat: no-repeat;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }

  // "x" button that appears when a value is entered
  .clear {
    cursor: pointer;
    appearance: none;
    -webkit-appearance: none;
    position: absolute;
    top: 0;
    right: 0;
    margin: 6px;
    background: none;
    border: none;
    border-radius: 50%;
    color: var(--placeholderColor);
    display: flex;
    align-items: center;
    justify-content: center;

    &:hover,
    &:focus {
      color: #333;
      color: var(--subBorderColor);
    }
  }

  // hide clear button while placeholder text is visible
  input:placeholder-shown + label + .clear,
  textarea:placeholder-shown + label + .clear {
    display: none;
  }

  // button styling
  input[type='submit'],
  input[type='reset'],
  input[type='image'],
  button {
    background: var(--buttonBackgroundColor);
    color: var(--formTextColor);
    border: 2px var(--borderColor) solid;
    border-radius: 5px;
    padding: 5px;
  }

  // style placeholders
  input,
  textarea {
    &::placeholder {
      color: var(--placeholderColor);
      opacity: 1;
    }
  }

  input:not(:placeholder-shown)+label,
  input:focus+label,
  textarea:not(:placeholder-shown)+label,
  textarea:focus+label,
  select+label.floatLabelFormAnimatedLabel,
  .checkboxes label.floatLabelFormAnimatedLabel,
  .radios label.floatLabelFormAnimatedLabel,
  dt>label {
    color: var(--formTextColor);
  }

  // animated labels
  .floatLabelForm {
    div {
      position: relative;

      dd:not(.singleCheckbox) {
        >label {
          position: absolute;
          transform-origin: left center;
          pointer-events: none;
          top: 10px;
          left: 8px;
          transition: transform 250ms;
          cursor: text;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        input,
        textarea {

          // hide placeholder content until input is focused
          &::placeholder {
            opacity: 0;
            transition: inherit;
          }

          &::-moz-placeholder {
            opacity: 0;
            transition: inherit;
          }

          &::-webkit-input-placeholder {
            opacity: 0;
            transition: inherit;
          }

          &:-ms-input-placeholder {
            opacity: 0;
            transition: inherit;
          }

          // show placeholder content when focused
          &:focus {
            &::placeholder {
              opacity: 1;
            }

            &::-moz-placeholder {
              opacity: 1;
            }

            &::-webkit-input-placeholder {
              opacity: 1;
            }

            &:-ms-input-placeholder {
              opacity: 1;
            }
          }
        }
      }
    }

    // disable autofill yellow
    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active,
    textarea:-webkit-autofill,
    textarea:-webkit-autofill:hover,
    textarea:-webkit-autofill:focus,
    textarea:-webkit-autofill:active,
    select:-webkit-autofill,
    select:-webkit-autofill:hover,
    select:-webkit-autofill:focus,
    select:-webkit-autofill:active {
      -webkit-box-shadow: 0 0 0 1000px var(--formBackgroundColor) inset;
      transition: background-color 5000s ease-in-out 0s, color 5000s ease-in-out 0s;
      transition-delay: 5000s;
      transition-property: background-color, color;
    }
  }
}